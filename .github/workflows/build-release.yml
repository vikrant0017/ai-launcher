name: Build & Release Electron

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: ui/package-lock.json
      - name: Install uv based on the config files in the working-directory
        uses: astral-sh/setup-uv@v6
        with:
          working-directory: ./backend
      - name: Install UI Dependencies
        run: npm ci
        working-directory: ./ui
      - name: Install Backend Dependencies
        run: uv sync
        working-directory: ./backend
      - name: Package Backend using Pyisntaller
        run: uv run -- pyinstaller server.spec
        working-directory: ./backend
      - name: Build Electron
        run: npm run make
        working-directory: ./ui
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: make-output-${{ matrix.os }}
          path: ui/out/make

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets
          pattern: make-output-*
          merge-multiple: true
      - name: List downloaded files
        run: ls -R release-assets
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release-assets/zip/linux/x64/*.zip
            release-assets/zip/darwin/x64/*.zip
            release-assets/zip/win32/x64/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
